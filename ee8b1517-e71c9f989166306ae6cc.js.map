{"version":3,"file":"ee8b1517-e71c9f989166306ae6cc.js","mappings":"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","sources":["webpack://v1/./node_modules/chart.js/dist/chart.js"],"sourcesContent":["/*!\n * Chart.js v4.4.1\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.1\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n"],"names":["Animator","constructor","this","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","r","call","window","_update","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","color","c0","c","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","e","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","Object","keys","d","animation","animatedProps","getOwnPropertyNames","key","option","properties","_animateOptions","values","newOptions","options","$shared","assign","$animations","resolveTargetOptions","animations","_createAnimations","anim","all","awaitAll","then","props","charAt","value","size","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","s","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","id","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","scales","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","fill","isPluginEnabled","console","warn","updateIndex","dataset","getDataset","chooseId","x","y","xid","xAxisID","v","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","u","_dataCheck","adata","Array","convertObjectDataToArray","isExtensible","l","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","t","b","top","right","bottom","left","disabled","toClip","clip","defaultClip","elements","area","chartArea","drawActiveElementsOnTop","element","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","_","sort","a","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","base","borderProps","enableBorderRadius","parseEdge","orig","v1","v2","startEnd","setInflateAmount","inflateAmount","ratio","DoughnutController","animateRotate","animateScale","numbers","cutout","rotation","circumference","radius","spacing","_scriptable","name","_indexable","startsWith","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","borderWidth","getDataVisibility","onClick","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","offsetX","offsetY","getter","_getRotation","_getCircumference","_getRotationExtents","T","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","width","height","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","H","minX","P","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","isNaN","locale","borderAlign","hoverBorderWidth","offset","hoverOffset","ringWeightOffset","weight","PolarAreaController","angleLines","display","beginAtZero","grid","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","controllers","__proto__","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","obj","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","last","skipNull","val","indexOf","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","points","point","iPixel","vPixel","skip","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","_datasetIndex","_decimated","segment","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","abstract","Error","DateAdapterBase","override","members","prototype","init","formats","format","diff","startOf","endOf","adapters","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","setLayoutDims","layouts","params","wrap","stackWeight","includes","_stack","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","getMargins","marginForPositions","positions","margin","fitBoxes","boxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","passive","removeListener","nodeListContains","nodeList","node","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","determinedMaxTicks","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","result","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","len","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","round","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","lineHeight","titleAlign","align","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","title","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","gcLen","garbageCollect","valueAt","idx","pixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","backdrop","tickTextAlign","showLabelBackdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","itemDefaults","defaults","defaultRoutes","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","routeDefaults","descriptors","describe","registerDefaults","overrides","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","local","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","toLowerCase","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","hasFunction","needContext","subResolver","descriptorDefaults","resolverCache","p","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","maintainAspectRatio","responsive","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","hover","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","onHover","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","PI","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","closePath","fullCircles","borderJoinStyle","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","borderCapStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","tension","cubicInterpolationMode","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segments","segmentMethod","strokePathDirect","LineElement","capBezierPoints","_points","_segments","_pointsUpdated","interpolate","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","bounds","maxW","maxH","parseBorderWidth","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","rect","inflateRect","amount","refRect","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","translate","radiusOffset","drawArc","BarElement","addRectPath","mouseX","mouseY","inXRange","inYRange","PointElement","hoverRadius","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","k","plugin_colors","forceOverride","_args","chartOptions","colorizer","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","pointCount","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","fillOption","parseFillOption","parseFloat","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","drawLegendBox","strikethrough","fillText","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_fallback","Colors","Decimation","Filler","SubTitle","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","relativeLabelSize","minSpacing","rad","LinearScaleBase","_startValue","_endValue","_valueRange","isFinite","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","tickValue","generateTicks$1","LinearScale","formatters","numeric","log10Floor","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","minExp","exp","startExp","significand","lastTick","LogarithmicScale","logarithmic","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","CategoryScale","_addedLabels","added","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"sourceRoot":""}